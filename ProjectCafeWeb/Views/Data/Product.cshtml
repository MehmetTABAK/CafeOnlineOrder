@{
    ViewData["Title"] = "Ürünler";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using ProjectCafeEntities
@using System.Security.Claims
@model List<Product>

@{
    var allCategories = ViewBag.AllMenuCategories as List<MenuCategory>;
    var allSubCategories = ViewBag.AllSubMenuCategories as List<SubMenuCategory>;

    var isLoggedIn = User.Identity.IsAuthenticated;
    var fullName = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == "FullName")?.Value : null;
    var initials = fullName != null ? string.Concat(fullName.Split(" ").Select(s => s[0])) : "G";
    var role = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value : null;
    var permissionsJson = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == "Permissions")?.Value : null;
    var allowedPages = !string.IsNullOrEmpty(permissionsJson) ? System.Text.Json.JsonSerializer.Deserialize<List<string>>(permissionsJson) : new List<string>();
}

<!-- Hero Section -->
<div class="product-hero">
    <div class="container py-5">
        <h1 class="display-4 text-white">Ürün Yönetimi</h1>
        <p class="lead text-white-50">Menünüzdeki ürünleri kolayca yönetin</p>
    </div>
</div>

<div class="container">
    @foreach (var category in allCategories)
    {
        <div class="menu-divider">
            <span>@category.CategoryName</span>
        </div>

        var subCategoriesInThisCategory = allSubCategories.Where(s => s.MenuCategoryId == category.Id).ToList();

        foreach (var subCategory in subCategoriesInThisCategory)
        {
            var subCategoryProducts = Model.Where(p => p.SubMenuCategoryId == subCategory.Id).ToList();

            <div class="category-header">
                <div class="category-title">
                    <span>@subCategory.SubCategoryName</span>
                </div>
                <div class="category-divider"></div>
            </div>

            <div class="row">
                @if (subCategoryProducts.Any())
                {
                    foreach (var product in subCategoryProducts)
                    {
                         <div class="col-lg-4 col-md-6 mb-4">
                            <div class="product-card">
                                <div class="product-badge">
                                    @if (product.IsThereDiscount)
                                    {
                                        <span class="badge bg-danger">%@product.DiscountRate İNDİRİM</span>
                                    }
                                    @if (product.StockCount > 0)
                                    {
                                        <span class="badge bg-success">STOKTA (@product.StockCount)</span>
                                    }
                                </div>
                                <div class="product-image">
                                    <img src="@product.Image" alt="@product.Name" class="img-fluid">
                                </div>
                                <div class="product-body">
                                    <h3 class="product-title">@product.Name</h3>
                                    <div class="product-price">
                                        @if (product.IsThereDiscount)
                                        {
                                            var discountRate = (product.Price * product.DiscountRate) / 100;
                                            var lastPrice = (product.Price - discountRate);
                                            <span class="original-price">@product.Price.ToString("N2") ₺</span>
                                            <span class="discount-price">@lastPrice ₺</span>
                                        }
                                        else
                                        {
                                            <span class="current-price">@product.Price.ToString("N2") ₺</span>
                                        }
                                    </div>
                                </div>
                                <div class="product-actions">
                                    @if (role == "Admin" || allowedPages.Contains("UpdateProduct"))
                                    {
                                        <a href="#">
                                            <button class="readmore-btn edit-product-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#productModal"
                                            data-id="@product.Id"
                                            data-name="@product.Name"
                                            data-price="@product.Price"
                                            data-image="@product.Image"
                                            data-stock-count="@product.StockCount"
                                            data-has-discount="@product.IsThereDiscount"
                                            data-discount="@product.DiscountRate"
                                            data-category="@category.CategoryName"
                                            data-subcategory="@subCategory.SubCategoryName"
                                            data-category-id="@product.MenuCategoryId"
                                            data-subcategory-id="@product.SubMenuCategoryId">
                                                <span class="book-wrapper">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                    fill="rgb(86, 69, 117)"
                                                    viewBox="0 0 126 75"
                                                    class="book">
                                                        <rect stroke-width="3"
                                                        stroke="#fff"
                                                        rx="7.5"
                                                        height="70"
                                                        width="121"
                                                        y="2.5"
                                                        x="2.5"></rect>
                                                        <line stroke-width="3" stroke="#fff" y2="75" x2="63.5" x1="63.5"></line>
                                                        <path stroke-linecap="round"
                                                        stroke-width="4"
                                                        stroke="#fff"
                                                        d="M25 20H50"></path>
                                                        <path stroke-linecap="round"
                                                        stroke-width="4"
                                                        stroke="#fff"
                                                        d="M101 20H76"></path>
                                                        <path stroke-linecap="round"
                                                        stroke-width="4"
                                                        stroke="#fff"
                                                        d="M16 30L50 30"></path>
                                                        <path stroke-linecap="round"
                                                        stroke-width="4"
                                                        stroke="#fff"
                                                        d="M110 30L76 30"></path>
                                                    </svg>

                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                    fill="none"
                                                    viewBox="0 0 65 75"
                                                    class="book-page">
                                                        <path stroke-linecap="round"
                                                        stroke-width="4"
                                                        stroke="#fff"
                                                        d="M40 20H15"></path>
                                                        <path stroke-linecap="round"
                                                        stroke-width="4"
                                                        stroke="#fff"
                                                        d="M49 30L15 30"></path>
                                                        <path stroke-width="3"
                                                        stroke="#fff"
                                                        d="M2.5 2.5H55C59.1421 2.5 62.5 5.85786 62.5 10V65C62.5 69.1421 59.1421 72.5 55 72.5H2.5V2.5Z"></path>
                                                    </svg>
                                                </span>
                                                <span class="text"> Ürünü Düzenle </span>
                                            </button>
                                        </a>
                                    }
                                    
                                    @if (role == "Admin" || allowedPages.Contains("UpdateStockProduct"))
                                    {
                                        <label class="switch">
                                            <span class="switch-text">Stok</span>
                                            <input type="checkbox" class="stock-checkbox" data-id="@product.Id" @(product.Stock ? "checked" : "")>
                                            <div class="slider">
                                                <div class="circle">
                                                    <svg class="cross" xml:space="preserve" style="enable-background:new 0 0 512 512" viewBox="0 0 365.696 365.696" y="0" x="0" height="6" width="6" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                                        <g>
                                                            <path data-original="#000000" fill="currentColor" d="M243.188 182.86 356.32 69.726c12.5-12.5 12.5-32.766 0-45.247L341.238 9.398c-12.504-12.503-32.77-12.503-45.25 0L182.86 122.528 69.727 9.374c-12.5-12.5-32.766-12.5-45.247 0L9.375 24.457c-12.5 12.504-12.5 32.77 0 45.25l113.152 113.152L9.398 295.99c-12.503 12.503-12.503 32.769 0 45.25L24.48 356.32c12.5 12.5 32.766 12.5 45.247 0l113.132-113.132L295.99 356.32c12.503 12.5 32.769 12.5 45.25 0l15.081-15.082c12.5-12.504 12.5-32.77 0-45.25zm0 0"></path>
                                                        </g>
                                                    </svg>
                                                    <svg class="checkmark" xml:space="preserve" style="enable-background:new 0 0 512 512" viewBox="0 0 24 24" y="0" x="0" height="10" width="10" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                                        <g>
                                                            <path class="" data-original="#000000" fill="currentColor" d="M9.707 19.121a.997.997 0 0 1-1.414 0l-5.646-5.647a1.5 1.5 0 0 1 0-2.121l.707-.707a1.5 1.5 0 0 1 2.121 0L9 14.171l9.525-9.525a1.5 1.5 0 0 1 2.121 0l.707.707a1.5 1.5 0 0 1 0 2.121z"></path>
                                                        </g>
                                                    </svg>
                                                </div>
                                            </div>
                                        </label>
                                    }
                                    
                                    @if (role == "Admin" || allowedPages.Contains("DeleteProduct"))
                                    {
                                        <a href="#">
                                            <button class="noselect delete-product-btn" data-id="@product.Id">
                                                <span class="text">Ürünü Kaldır</span>
                                                <span class="icon">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                                        <path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"></path>
                                                    </svg>
                                                </span>
                                            </button>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="no-products">
                            <i class="fas fa-pizza-slice"></i>
                            <p>Bu kategoride henüz ürün bulunmamaktadır</p>
                        </div>
                    </div>
                }
            </div>

            @if (role == "Admin" || allowedPages.Contains("AddProduct"))
            {
                <div class="d-flex justify-content-end mb-4">
                <button class="addimg"
                data-category="@category.CategoryName"
                data-subcategory="@subCategory.SubCategoryName"
                data-category-id="@category.Id"
                data-subcategory-id="@subCategory.Id"
                data-bs-toggle="modal"
                data-bs-target="#productModal">
                    <span class="addimg__text">Ürün Ekle</span>
                    <span class="addimg__icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24" stroke-width="2" stroke-linejoin="round" stroke-linecap="round" stroke="currentColor" height="24" fill="none" class="svg"><line y2="19" y1="5" x2="12" x1="12"></line><line y2="12" y1="12" x2="19" x1="5"></line></svg></span>
                </button>
            </div>

            }
        }
    }
</div>

@if (role == "Admin" || allowedPages.Contains("AddProduct") || allowedPages.Contains("UpdateProduct"))
{
    <div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content border-0">
                <div class="modal-header bg-gradient-primary text-white">
                    <h5 class="modal-title" id="productModalLabel">Ürün Yönetimi</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="image-upload-container mb-4">
                                <label for="image-upload" class="upload-area">
                                    <div class="upload-content">
                                        <i class="fas fa-cloud-upload-alt fa-3x text-primary mb-3"></i>
                                        <h5>Resim Yükle</h5>
                                        <p class="text-muted mb-1">Üründe görülecek resmi seçmek için tıklayın!</p>
                                        <small class="text-muted">PNG, JPG (Max. 2MB)</small>
                                    </div>
                                    <img id="preview" class="preview-image" alt="Önizleme">
                                    <input type="file" id="image-upload" class="d-none" accept="image/*">
                                </label>
                                <div class="image-requirements text-muted mt-2">
                                    <small>Önerilen boyut: 800x400px</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-4">
                                <label for="categoryName" class="form-label fw-bold">Üst Menü Adı*</label>
                                <input type="text" id="menuCategory" class="form-control" readonly>
                            </div>
                            <div class="form-group mb-4">
                                <label for="subCategoryName" class="form-label fw-bold">Alt Menü Adı*</label>
                                <input type="text" id="subMenuCategory" class="form-control" readonly>
                            </div>
                            <div class="form-group mb-4">
                                <label for="productName" class="form-label fw-bold">Ürün Adı*</label>
                                <input type="text" class="form-control form-control-lg" id="productName"
                                       placeholder="Örnek: Orta Boy Karışık Pizza" required>
                            </div>
                            <div class="form-group mb-4">
                                <label for="productPrice" class="form-label fw-bold">Ürün Fiyatı*</label>
                                <input type="number" class="form-control form-control-lg" id="productPrice"
                                       placeholder="Örnek: 100" required>
                            </div>
                            <div class="form-group mb-4">
                                <label for="productStockCount" class="form-label fw-bold">Ürün Stok Sayısı</label>
                                <input type="number" class="form-control form-control-lg" id="productStockCount"
                                       placeholder="Örnek: 50" required>
                            </div>
                            <div class="form-group mb-4">
                                <label class="form-label fw-bold">İndirim Uygula</label>
                                <div class="checkbox-wrapper">
                                    <input type="radio" name="discount" value="yes" class="check" id="check1-61">
                                    <label for="check1-61" class="label">
                                        <svg width="45" height="45" viewBox="0 0 95 95">
                                            <rect x="30" y="20" width="50" height="50" stroke="black" fill="none"></rect>
                                            <g transform="translate(0,-952.36222)">
                                            <path d="m 56,963 c -102,122 6,9 7,9 17,-5 -66,69 -38,52 122,-77 -7,14 18,4 29,-11 45,-43 23,-4" stroke="black" stroke-width="3" fill="none" class="path1"></path>
                                            </g>
                                        </svg>
                                        <span>Evet</span>
                                    </label>

                                    <input type="radio" name="discount" value="no" class="check" id="check1-62" checked>
                                    <label for="check1-62" class="label">
                                        <svg width="45" height="45" viewBox="0 0 95 95">
                                            <rect x="30" y="20" width="50" height="50" stroke="black" fill="none"></rect>
                                            <g transform="translate(0,-952.36222)">
                                            <path d="m 56,963 c -102,122 6,9 7,9 17,-5 -66,69 -38,52 122,-77 -7,14 18,4 29,-11 45,-43 23,-4" stroke="black" stroke-width="3" fill="none" class="path1"></path>
                                            </g>
                                        </svg>
                                        <span>Hayır</span>
                                    </label>
                                </div>

                                <div id="discountContainer" class="discount-hidden">
                                    <label class="form-label fw-bold">İndirim Oranı (%)*</label>
                                    <input type="number" id="discount-amount" class="form-control form-control-lg" 
                                           placeholder="Örnek: 10">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0 bg-light">
                    <button type="button" class="btn btn-outline-secondary rounded-pill px-4" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Vazgeç
                    </button>
                    <button type="button" class="btn btn-primary rounded-pill px-4" id="saveProductBtn">
                        <i class="fas fa-save me-2"></i>Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" id="menuCategoryId">
    <input type="hidden" id="subMenuCategoryId">
}

<script>
    // Modal açılırken formu ayarla
    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(button => {
        button.addEventListener('click', function () {
            const modal = document.getElementById('productModal');
            const category = this.getAttribute('data-category');
            const subcategory = this.getAttribute('data-subcategory');
            const categoryId = this.getAttribute('data-category-id');
            const subCategoryId = this.getAttribute('data-subcategory-id');

            document.getElementById('menuCategory').value = category;
            document.getElementById('subMenuCategory').value = subcategory;
            document.getElementById('menuCategoryId').value = categoryId;
            document.getElementById('subMenuCategoryId').value = subCategoryId;

            const isEdit = this.classList.contains('edit-product-btn');
            modal.setAttribute('data-mode', isEdit ? 'edit' : 'create');

            if (isEdit) {
                document.querySelector('input[placeholder="Örnek: Orta Boy Karışık Pizza"]').value = this.getAttribute('data-name');
                document.querySelector('input[placeholder="Örnek: 100"]').value = this.getAttribute('data-price');
                document.querySelector('input[placeholder="Örnek: 50"]').value = this.getAttribute('data-stock-count');
                const image = this.getAttribute('data-image');
                if (image) document.getElementById('preview').src = image;

                const hasDiscount = this.getAttribute('data-has-discount') === "True";
                const discount = this.getAttribute('data-discount');

                if (hasDiscount) {
                    document.querySelector('input[name="discount"][value="yes"]').checked = true;
                    document.getElementById('discountContainer').classList.remove('discount-hidden');
                    document.getElementById('discount-amount').value = discount;
                } else {
                    document.querySelector('input[name="discount"][value="no"]').checked = true;
                    document.getElementById('discountContainer').classList.add('discount-hidden');
                    document.getElementById('discount-amount').value = "";
                }

                modal.setAttribute('data-id', this.getAttribute('data-id'));
            } else {
                document.querySelector('input[placeholder="Örnek: Orta Boy Karışık Pizza"]').value = "";
                document.querySelector('input[placeholder="Örnek: 100"]').value = "";
                document.querySelector('input[placeholder="Örnek: 50"]').value = "";
                document.getElementById('preview').src = "";
                document.querySelector('input[name="discount"][value="no"]').checked = true;
                document.getElementById('discountContainer').classList.add('discount-hidden');
                document.getElementById('discount-amount').value = "";
                modal.removeAttribute('data-id');
            }
        });
    });

    // Ürün kaydetme ve güncelleme işlemleri
    document.querySelector('#productModal .btn-primary').addEventListener('click', () => {
        const modal = document.getElementById('productModal');
        const mode = modal.getAttribute('data-mode');
        const id = modal.getAttribute('data-id');

        const name = document.querySelector('input[placeholder="Örnek: Orta Boy Karışık Pizza"]').value;
        const price = document.querySelector('input[placeholder="Örnek: 100"]').value;
        const stockCount = document.querySelector('input[placeholder="Örnek: 50"]').value;
        const hasDiscount = document.querySelector('input[name="discount"]:checked').value === 'yes';
        const discount = hasDiscount ? document.getElementById('discount-amount').value : 0;
        const imageSrc = document.getElementById('preview').src;

        const menuCategoryId = document.getElementById('menuCategoryId').value;
        const subMenuCategoryId = document.getElementById('subMenuCategoryId').value;

        const payload = {
            id: mode === 'edit' ? id : '00000000-0000-0000-0000-000000000000',
            name,
            price: parseFloat(price),
            stockCount: stockCount || null,
            image: imageSrc,
            isThereDiscount: hasDiscount,
            discountRate: parseFloat(discount),
            menuCategoryId,
            subMenuCategoryId,
            active: true,
            stock: true,
        };

        const endpoint = mode === 'edit' ? '/Data/UpdateProduct' : '/Data/AddProduct';

        fetch(endpoint, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                location.reload();
            } else {
                alert(data.message || "İşlem başarısız.");
            }
        })
        .catch(() => alert('Sunucu hatası oluştu.'));
    });

    // Stok durumunu güncelle (modal kaldırıldı, onay sorusu eklendi)
    document.querySelectorAll('.stock-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', function () {
            const productId = this.getAttribute('data-id');
            const isChecked = this.checked;
            const confirmationMessage = isChecked
                ? "Ürünü stoğa eklemek istediğinize emin misiniz?"
                : "Ürünü stoktan kaldırmak istediğinize emin misiniz?";

            if (!confirm(confirmationMessage)) {
                this.checked = !isChecked;
                return;
            }

            fetch('/Data/UpdateStock', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: productId, stock: isChecked })
            })
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        alert('Stok durumu güncellenemedi.');
                        checkbox.checked = !isChecked;
                    }
                })
                .catch(() => {
                    alert('Bir hata oluştu.');
                    checkbox.checked = !isChecked;
                });
        });
    });

    // Ürün silme işlemi
    document.querySelectorAll('.delete-product-btn').forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-id');
            if (!confirm("Bu ürünü silmek istiyor musunuz?")) return;

            fetch('/Data/DeleteProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: productId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert(data.message || 'Silme işlemi başarısız oldu.');
                    }
                })
                .catch(() => alert('Sunucu hatası oluştu.'));
        });
    });
</script>