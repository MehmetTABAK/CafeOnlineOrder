@{
    ViewData["Title"] = "Alt Menü";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using ProjectCafeEntities
@using System.Security.Claims
@model List<SubMenuCategory>

@{
    var allCategories = ViewBag.AllMenuCategories as List<MenuCategory>;
    var allSubCategories = Model;

    var isLoggedIn = User.Identity.IsAuthenticated;
    var fullName = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == "FullName")?.Value : null;
    var initials = fullName != null ? string.Concat(fullName.Split(" ").Select(s => s[0])) : "G";
    var role = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value : null;
    var permissionsJson = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == "Permissions")?.Value : null;
    var allowedPages = !string.IsNullOrEmpty(permissionsJson) ? System.Text.Json.JsonSerializer.Deserialize<List<string>>(permissionsJson) : new List<string>();
}

<div class="hero-section-submenu">
    <div class="container py-5">
        <h1 class="display-4 text-white">Alt Menü Yönetimi</h1>
        <p class="lead text-white-50">Menünüzdeki alt menüleri kolayca yönetin</p>
    </div>
</div>

<div class="container">
    @foreach (var category in allCategories)
    {
        <div class="menu-divider">
            <span>@category.CategoryName</span>
        </div>

        var subCategoriesInThisCategory = allSubCategories.Where(s => s.MenuCategoryId == category.Id).ToList();

        <div class="row pt-4">
            @if (subCategoriesInThisCategory.Any())
            {
                foreach (var subCategory in subCategoriesInThisCategory)
                {
                     <div class="col-lg-4 col-md-6 mb-4">
                        <div class="menu-card h-100 border-0 shadow-lg">
                            <div class="card-img-container">
                                <img src="@subCategory.SubCategoryImage" class="card-img-top" alt="@subCategory.SubCategoryName">
                                <div class="card-img-overlay d-flex align-items-end">
                                   <h3 class="card-title text-white text-shadow">@subCategory.SubCategoryName</h3>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between gap-2">
                                    @if (role == "Admin" || allowedPages.Contains("UpdateSubMenuCategory"))
                                    {
                                        <a href="#">
                                            <button class="readmore-btn edit-subcategory-btn"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#subCategoryModal"
                                                    data-id="@subCategory.Id"
                                                    data-name="@subCategory.SubCategoryName"
                                                    data-image="@subCategory.SubCategoryImage"
                                                    data-category="@category.CategoryName"
                                                    data-category-id="@subCategory.MenuCategoryId">
                                                <span class="book-wrapper">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                         fill="rgb(86, 69, 117)"
                                                         viewBox="0 0 126 75"
                                                         class="book">
                                                        <rect stroke-width="3"
                                                              stroke="#fff"
                                                              rx="7.5"
                                                              height="70"
                                                              width="121"
                                                              y="2.5"
                                                              x="2.5"></rect>
                                                        <line stroke-width="3" stroke="#fff" y2="75" x2="63.5" x1="63.5"></line>
                                                        <path stroke-linecap="round"
                                                              stroke-width="4"
                                                              stroke="#fff"
                                                              d="M25 20H50"></path>
                                                        <path stroke-linecap="round"
                                                              stroke-width="4"
                                                              stroke="#fff"
                                                              d="M101 20H76"></path>
                                                        <path stroke-linecap="round"
                                                              stroke-width="4"
                                                              stroke="#fff"
                                                              d="M16 30L50 30"></path>
                                                        <path stroke-linecap="round"
                                                              stroke-width="4"
                                                              stroke="#fff"
                                                              d="M110 30L76 30"></path>
                                                    </svg>

                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                         fill="none"
                                                         viewBox="0 0 65 75"
                                                         class="book-page">
                                                        <path stroke-linecap="round"
                                                              stroke-width="4"
                                                              stroke="#fff"
                                                              d="M40 20H15"></path>
                                                        <path stroke-linecap="round"
                                                              stroke-width="4"
                                                              stroke="#fff"
                                                              d="M49 30L15 30"></path>
                                                        <path stroke-width="3"
                                                              stroke="#fff"
                                                              d="M2.5 2.5H55C59.1421 2.5 62.5 5.85786 62.5 10V65C62.5 69.1421 59.1421 72.5 55 72.5H2.5V2.5Z"></path>
                                                    </svg>
                                                </span>
                                                <span class="text"> Alt Menüyü Düzenle </span>
                                            </button>
                                        </a>
                                    }
                                    @if (role == "Admin" || allowedPages.Contains("DeleteSubMenuCategory"))
                                    {
                                        <a href="#">
                                            <button class="noselect delete-subcategory-btn" data-id="@subCategory.Id">
                                                <span class="text">Alt Menüyü Kaldır</span>
                                                <span class="icon">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                                        <path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"></path>
                                                    </svg>
                                                </span>
                                            </button>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12">
                    <div class="no-subcategory">
                        <i class="fas fa-folder-open"></i>
                        <p>Bu kategoriye ait alt menü bulunmamaktadır</p>
                    </div>
                </div>
            }
        </div>

        @if (role == "Admin" || allowedPages.Contains("AddSubMenuCategory"))
        {
            <div class="d-flex justify-content-end mb-4">
                <button class="addimg"
                        data-category="@category.CategoryName"
                        data-category-id="@category.Id"
                        data-bs-toggle="modal"
                        data-bs-target="#subCategoryModal">
                    <span class="addimg__text">Alt Menü Ekle</span>
                    <span class="addimg__icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24" stroke-width="2" stroke-linejoin="round" stroke-linecap="round" stroke="currentColor" height="24" fill="none" class="svg"><line y2="19" y1="5" x2="12" x1="12"></line><line y2="12" y1="12" x2="19" x1="5"></line></svg></span>
                </button>
            </div>
        }
    }

</div>

@if (role == "Admin" || allowedPages.Contains("AddSubMenuCategory") || allowedPages.Contains("UpdateSubMenuCategory"))
{
    <div class="modal fade" id="subCategoryModal" tabindex="-1" aria-labelledby="subCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content border-0">
                <div class="modal-header bg-gradient-primary text-white">
                    <h5 class="modal-title" id="subCategoryModalLabel">Alt Menü Yönetimi</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="image-upload-container mb-4">
                                <label for="image-upload" class="upload-area">
                                    <div class="upload-content">
                                        <i class="fas fa-cloud-upload-alt fa-3x text-primary mb-3"></i>
                                        <h5>Resim Yükle</h5>
                                        <p class="text-muted mb-1">Alt menüde görülecek resmi seçmek için tıklayın!</p>
                                        <small class="text-muted">PNG, JPG (Max. 2MB)</small>
                                    </div>
                                    <img id="preview" class="preview-image" alt="Önizleme">
                                    <input type="file" id="image-upload" class="d-none" accept="image/*">
                                </label>
                                <div class="image-requirements text-muted mt-2">
                                    <small>Önerilen boyut: 800x400px</small>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group mb-4">
                                <label for="categoryName" class="form-label fw-bold">Üst Menü Adı*</label>
                                <input type="text" id="menuCategory" class="form-control" readonly>
                            </div>

                            <div class="form-group mb-4">
                                <label for="subCategoryName" class="form-label fw-bold">Alt Menü Adı*</label>
                                <input type="text" class="form-control form-control-lg" id="subCategoryName"
                                       placeholder="Örnek: Burgerler" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0 bg-light">
                    <button type="button" class="btn btn-outline-secondary rounded-pill px-4" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Vazgeç
                    </button>
                    <button type="button" class="btn btn-primary rounded-pill px-4" id="saveSubCategoryBtn">
                        <i class="fas fa-save me-2"></i>Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" id="menuCategoryId">
}

<script>
    // Modal açılırken formu ayarla
    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(button => {
        button.addEventListener('click', function () {
            const modal = document.getElementById('subCategoryModal');
            const category = this.getAttribute('data-category');
            const categoryId = this.getAttribute('data-category-id');

            document.getElementById('menuCategory').value = category;
            document.getElementById('menuCategoryId').value = categoryId;

            const isEdit = this.classList.contains('edit-subcategory-btn');
            modal.setAttribute('data-mode', isEdit ? 'edit' : 'create');

            if (isEdit) {
                document.querySelector('input[placeholder="Örnek: Burgerler"]').value = this.getAttribute('data-name');
                const image = this.getAttribute('data-image');
                if (image) document.getElementById('preview').src = image;
                modal.setAttribute('data-id', this.getAttribute('data-id'));
            } else {
                document.querySelector('input[placeholder="Örnek: Burgerler"]').value = "";
                document.getElementById('preview').src = "";
                modal.removeAttribute('data-id');
            }
        });
    });

    // Alt menü kaydetme ve güncelleme işlemleri
    document.querySelector('#subCategoryModal .btn-primary').addEventListener('click', () => {
        const modal = document.getElementById('subCategoryModal');
        const mode = modal.getAttribute('data-mode');
        const id = modal.getAttribute('data-id');

        const name = document.querySelector('input[placeholder="Örnek: Burgerler"]').value;
        const category = document.getElementById('menuCategory').value;
        const imageSrc = document.getElementById('preview').src;

        const menuCategoryId = document.getElementById('menuCategoryId').value;

        const payload = {
            id: mode === 'edit' ? id : '00000000-0000-0000-0000-000000000000',
            subCategoryName: name,
            subCategoryImage: imageSrc,
            menuCategoryId,
            active: true,
        };

        const endpoint = mode === 'edit' ? '/Data/UpdateSubMenuCategory' : '/Data/AddSubMenuCategory';

        fetch(endpoint, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                location.reload();
            } else {
                alert(data.message || "İşlem başarısız.");
            }
        })
        .catch(() => alert('Sunucu hatası oluştu.'));
    });

    // Alt menü silme işlemi
    document.querySelectorAll('.delete-subcategory-btn').forEach(button => {
        button.addEventListener('click', function () {
            const subCategoryId = this.getAttribute('data-id');
            if (!confirm("Bu alt menüyü silmek istiyor musunuz?")) return;

            fetch('/Data/DeleteSubMenuCategory', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: subCategoryId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert(data.message || 'Silme işlemi başarısız oldu.');
                    }
                })
                .catch(() => alert('Sunucu hatası oluştu.'));
        });
    });
</script>