@{
    ViewData["Title"] = "Masalar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using ProjectCafeEntities
@using System.Security.Claims
@model List<Table>

@{
    var isLoggedIn = User.Identity.IsAuthenticated;
    var fullName = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == "FullName")?.Value : null;
    var initials = fullName != null ? string.Concat(fullName.Split(" ").Select(s => s[0])) : "G";
    var role = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value : null;
    var permissionsJson = isLoggedIn ? User.Claims.FirstOrDefault(c => c.Type == "Permissions")?.Value : null;
    var allowedPages = !string.IsNullOrEmpty(permissionsJson) ? System.Text.Json.JsonSerializer.Deserialize<List<string>>(permissionsJson) : new List<string>();
}

<div class="container-fluid p-4">
    <!-- Masa Grupları -->
    <div class="row g-4" id="tablesContainer">
        @foreach (var sectionGroup in Model.GroupBy(p => p.Section?.Name))
        {
            <div class="col-12 section-group" data-section="@sectionGroup.Key">
                <div class="menu-divider">
                    <span>@sectionGroup.Key</span>
                </div>

                <div class="row g-4">
                    @foreach (var table in sectionGroup)
                    {
                        var activeOrders = table.Orders.Where(o => o.Active).ToList();
                        var statusClass = "table-available";
                        var statusText = "Müsait";
                        var statusIcon = "fa-circle-check";
                        string bgClass = "bg-white";

                        if (activeOrders.Count != 0)
                        {
                            if (activeOrders.All(o => o.Status == 4 || o.Status == 6 || o.Status == 7 || o.Status == 8))
                            {
                                statusClass = "table-reserved";
                                statusText = "Rezerve";
                                statusIcon = "fa-calendar-check";
                                bgClass = "bg-green";
                            }
                            else if (activeOrders.All(o => o.Status == 5))
                            {
                                statusClass = "table-available";
                                statusText = "Müsait";
                                statusIcon = "fa-circle-check";
                                bgClass = "bg-white";
                            }
                            else if (activeOrders.Any(o => o.Status != 4 && o.Status != 5))
                            {
                                statusClass = "table-busy";
                                statusText = "Dolu";
                                statusIcon = "fa-utensils";
                                bgClass = "bg-yellow";
                            }
                        }

                        <div class="col-xl-4 col-lg-4 col-md-6">
                            <div class="table-card card h-100 border-0 shadow-sm overflow-hidden @statusClass @bgClass">
                                <div class="card-header d-flex justify-content-between align-items-center bg-white border-0 pb-0">
                                    <h5 class="mb-0 fw-bold">
                                        <i class="fas fa-table me-2"></i>@table.Name
                                    </h5>
                                    <span class="badge @statusClass-bg rounded-pill">
                                        <i class="fas @statusIcon me-1"></i>@statusText
                                    </span>
                                </div>

                                <div class="card-body pt-0">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <div>
                                        </div>
                                        <div class="text-end">
                                            <small class="text-muted">Sipariş:</small>
                                            <div class="fw-bold">@activeOrders.Count Adet</div>
                                        </div>
                                    </div>

                                    <div class="progress mb-3" style="height: 6px;">
                                        <div class="progress-bar @statusClass-bg" style="width: @(activeOrders.Count > 0 ? "100" : "0")%"></div>
                                    </div>

                                    <div class="d-flex justify-content-between gap-2">
                                        @if (role == "Admin" || allowedPages.Contains("ViewTableDetails"))
                                        {
                                            <a href="#">
                                                <button class="readmore-btn edit-table-btn"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#tableModal"
                                                        data-id="@table.Id">
                                                    <span class="book-wrapper">
                                                        <svg xmlns="http://www.w3.org/2000/svg"
                                                             fill="rgb(86, 69, 117)"
                                                             viewBox="0 0 126 75"
                                                             class="book">
                                                            <rect stroke-width="3"
                                                                  stroke="#fff"
                                                                  rx="7.5"
                                                                  height="70"
                                                                  width="121"
                                                                  y="2.5"
                                                                  x="2.5"></rect>
                                                            <line stroke-width="3" stroke="#fff" y2="75" x2="63.5" x1="63.5"></line>
                                                            <path stroke-linecap="round"
                                                                  stroke-width="4"
                                                                  stroke="#fff"
                                                                  d="M25 20H50"></path>
                                                            <path stroke-linecap="round"
                                                                  stroke-width="4"
                                                                  stroke="#fff"
                                                                  d="M101 20H76"></path>
                                                            <path stroke-linecap="round"
                                                                  stroke-width="4"
                                                                  stroke="#fff"
                                                                  d="M16 30L50 30"></path>
                                                            <path stroke-linecap="round"
                                                                  stroke-width="4"
                                                                  stroke="#fff"
                                                                  d="M110 30L76 30"></path>
                                                        </svg>

                                                        <svg xmlns="http://www.w3.org/2000/svg"
                                                             fill="none"
                                                             viewBox="0 0 65 75"
                                                             class="book-page">
                                                            <path stroke-linecap="round"
                                                                  stroke-width="4"
                                                                  stroke="#fff"
                                                                  d="M40 20H15"></path>
                                                            <path stroke-linecap="round"
                                                                  stroke-width="4"
                                                                  stroke="#fff"
                                                                  d="M49 30L15 30"></path>
                                                            <path stroke-width="3"
                                                                  stroke="#fff"
                                                                  d="M2.5 2.5H55C59.1421 2.5 62.5 5.85786 62.5 10V65C62.5 69.1421 59.1421 72.5 55 72.5H2.5V2.5Z"></path>
                                                        </svg>
                                                    </span>
                                                    <span class="text"> Masa Detayları </span>
                                                </button>
                                            </a>

                                        }

                                        @if (role == "Admin" || allowedPages.Contains("TurnOfNotification"))
                                        {
                                            <label class="notification-container">
                                                <input type="checkbox" class="notification-checkbox" data-id="@table.Id" @(table.Notification ? "checked" : "") />
                                                <svg fill="red"
                                                     viewBox="0 0 448 512"
                                                     height="1em"
                                                     xmlns="http://www.w3.org/2000/svg"
                                                     class="bell-regular">
                                                    <path d="M224 0c-17.7 0-32 14.3-32 32V49.9C119.5 61.4 64 124.2 64 200v33.4c0 45.4-15.5 89.5-43.8 124.9L5.3 377c-5.8 7.2-6.9 17.1-2.9 25.4S14.8 416 24 416H424c9.2 0 17.6-5.3 21.6-13.6s2.9-18.2-2.9-25.4l-14.9-18.6C399.5 322.9 384 278.8 384 233.4V200c0-75.8-55.5-138.6-128-150.1V32c0-17.7-14.3-32-32-32zm0 96h8c57.4 0 104 46.6 104 104v33.4c0 47.9 13.9 94.6 39.7 134.6H72.3C98.1 328 112 281.3 112 233.4V200c0-57.4 46.6-104 104-104h8zm64 352H224 160c0 17 6.7 33.3 18.7 45.3s28.3 18.7 45.3 18.7s33.3-6.7 45.3-18.7s18.7-28.3 18.7-45.3z"></path>
                                                </svg>
                                                <svg fill="green"
                                                     viewBox="0 0 448 512"
                                                     height="1em"
                                                     xmlns="http://www.w3.org/2000/svg"
                                                     class="bell-solid">
                                                    <path d="M224 0c-17.7 0-32 14.3-32 32V51.2C119 66 64 130.6 64 208v18.8c0 47-17.3 92.4-48.5 127.6l-7.4 8.3c-8.4 9.4-10.4 22.9-5.3 34.4S19.4 416 32 416H416c12.6 0 24-7.4 29.2-18.9s3.1-25-5.3-34.4l-7.4-8.3C401.3 319.2 384 273.9 384 226.8V208c0-77.4-55-142-128-156.8V32c0-17.7-14.3-32-32-32zm45.3 493.3c12-12 18.7-28.3 18.7-45.3H224 160c0 17 6.7 33.3 18.7 45.3s28.3 18.7 45.3 18.7s33.3-6.7 45.3-18.7z"></path>
                                                </svg>
                                            </label>
                                        }

                                        @if (role == "Admin" || allowedPages.Contains("CloseTable"))
                                        {
                                            <a href="#">
                                                <button class="noselect close-table-btn" data-id="@table.Id">
                                                    <span class="text">Masayı Kapat</span>
                                                    <span class="icon">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                                            <path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"></path>
                                                        </svg>
                                                    </span>
                                                </button>
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="tableModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content border-0">
            <div class="modal-header bg-primary text-white">
                <div class="d-flex align-items-center">
                    <i class="fas fa-utensils me-3 fs-4"></i>
                    <h5 class="modal-title mb-0 text-white fw-bold" id="modalTableName"></h5>
                </div>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body p-0">
                <!-- Ana İçerik -->
                <div class="row g-0">
                    <!-- Sipariş Listesi -->
                    <div class="col-lg-8 p-4 border-end">
                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0" style="table-layout: fixed;">
                                <thead class="table-light">
                                    <tr>
                                        <th width="40">
                                            <input type="checkbox" class="form-check-input" id="selectAllOrders">
                                        </th>
                                        <th style="width: 45%;">ÜRÜN ADI</th>
                                        <th style="width: 25%;" class="text-center">DURUM</th>
                                        <th style="width: 20%;" class="text-end">TUTAR</th>
                                    </tr>
                                </thead>
                                <tbody id="orderList">
                                    <!-- Siparişler dinamik olarak buraya eklenecek -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Ödeme ve İşlem Paneli -->
                    <div class="col-lg-4 p-4">
                        <!-- Özet Bilgiler -->
                        <div class="card border-0 shadow-sm mb-4">
                            <div class="card-header bg-white border-0 pt-3">
                                <h6 class="fw-bold mb-0">Özet Bilgiler</h6>
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between mb-2">
                                    <span class="text-muted">Toplam Tutar:</span>
                                    <span class="fw-bold" id="totalAmount">0.00 TL</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2 text-success">
                                    <span class="text-muted">Ödenen Tutar:</span>
                                    <span class="fw-bold" id="paidAmount">0.00 TL</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2 text-danger" id="cancelledRow" style="display:none;">
                                    <span class="text-muted">İptal Tutarı:</span>
                                    <span class="fw-bold" id="cancelledAmount">0.00 TL</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2 text-warning" id="returnedRow" style="display:none;">
                                    <span class="text-muted">İade Tutarı:</span>
                                    <span class="fw-bold" id="returnedAmount">0.00 TL</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2 text-info" id="bonusRow" style="display:none;">
                                    <span class="text-muted">İkram Tutarı:</span>
                                    <span class="fw-bold" id="bonusAmount">0.00 TL</span>
                                </div>
                                <hr>
                                <div class="d-flex justify-content-between fw-bold fs-5">
                                    <span>Kalan Tutar:</span>
                                    <span class="text-primary" id="remainingAmount">0.00 TL</span>
                                </div>
                            </div>
                        </div>

                        <!-- Seçilenler Özeti -->
                        <div class="card border-0 shadow-sm mb-4" id="selectedItemsCard" style="display: none;">
                            <div class="card-header bg-white border-0 pt-3">
                                <h6 class="fw-bold mb-0">Seçilen Ürünler</h6>
                            </div>
                            <div class="card-body">
                                <div id="selectedItemsList" class="mb-2"></div>
                                <div class="d-flex justify-content-between fw-bold">
                                    <span>Toplam:</span>
                                    <span id="selectedAmount">0.00 TL</span>
                                </div>
                            </div>
                        </div>

                        <!-- İşlem Butonları -->
                        <div class="d-grid gap-2">
                            <div class="btn-group w-100 mb-2">
                                @if (role == "Admin" || allowedPages.Contains("Payment"))
                                {
                                    <button id="payCardBtn" class="btn btn-primary flex-grow-1">
                                        <i class="fas fa-credit-card me-2"></i>Kart ile Öde
                                    </button>
                                    <button id="payCashBtn" class="btn btn-success flex-grow-1">
                                        <i class="fas fa-money-bill-wave me-2"></i>Nakit Öde
                                    </button>
                                }
                            </div>

                            @if (role == "Admin" || allowedPages.Contains("Payment"))
                            {
                                <button id="partialPayBtn" class="btn btn-secondary w-100 mb-2" disabled>
                                    <i class="fas fa-money-check-alt me-2"></i>Seçilenleri Öde
                                </button>
                            }

                            <div class="btn-group w-100 mb-2">
                                @if (role == "Admin" || allowedPages.Contains("ConfirmOrder"))
                                {
                                    <button id="confirmOrderBtn" class="btn btn-warning flex-grow-1" disabled>
                                        <i class="fas fa-check-circle me-2"></i>Onayla
                                    </button>
                                }
                                @if (role == "Admin" || allowedPages.Contains("DeliverTheOrder"))
                                {
                                    <button id="deliverTheOrderBtn" class="btn btn-info flex-grow-1" disabled>
                                        <i class="fas fa-truck me-2"></i>Teslim Et
                                    </button>
                                }
                            </div>

                            <div class="btn-group w-100 mb-2">
                                @if (role == "Admin" || allowedPages.Contains("CancelOrders"))
                                {
                                    <button id="cancelSelectedOrdersBtn" class="btn btn-outline-danger flex-grow-1" disabled>
                                        <i class="fas fa-times-circle me-2"></i>İptal Et
                                    </button>
                                }
                                @if (role == "Admin" || allowedPages.Contains("ReturnOrders"))
                                {
                                    <button id="returnSelectedOrdersBtn" class="btn btn-outline-warning flex-grow-1" disabled>
                                        <i class="fas fa-undo me-2"></i>İade Et
                                    </button>
                                }
                                @if (role == "Admin" || allowedPages.Contains("BonusOrders"))
                                {
                                    <button id="bonusSelectedOrdersBtn" class="btn btn-outline-success flex-grow-1" disabled>
                                        <i class="fas fa-gift me-2"></i>İkram Et
                                    </button>
                                }
                            </div>

                            @if (role == "Admin" || allowedPages.Contains("MoveTableAndOrders"))
                            {
                                <div class="mb-3">
                                    <label class="form-label">Masayı Taşı</label>
                                    <select id="moveTableSelect" class="form-select">
                                        <option value="">-- Hedef Masa Seçin --</option>
                                        <!-- Bölümlere göre gruplanmış masalar buraya eklenecek -->
                                    </select>
                                    <div class="btn-group w-100 mt-2">
                                        <button id="moveTableBtn" class="btn btn-outline-primary">
                                            <i class="fas fa-arrows-alt me-1"></i>Tümünü Taşı
                                        </button>
                                        <button id="moveSelectedOrdersBtn" class="btn btn-outline-info" disabled>
                                            <i class="fas fa-exchange-alt me-1"></i>Seçilenleri Taşı
                                        </button>
                                    </div>
                                </div>
                            }

                            @if (role == "Admin" || allowedPages.Contains("AddOrders"))
                            {
                                <div class="d-flex justify-content-center">
                                    <button class="addimg" id="openOrderModalBtn">
                                        <span class="addimg__text">Sipariş Ekle</span>
                                        <span class="addimg__icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24" stroke-width="2" stroke-linejoin="round" stroke-linecap="round" stroke="currentColor" height="24" fill="none" class="svg"><line y2="19" y1="5" x2="12" x1="12"></line><line y2="12" y1="12" x2="19" x1="5"></line></svg></span>
                                    </button>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Parçalı ödeme modalı -->
@if (role == "Admin" || allowedPages.Contains("Payment"))
{
    <div class="modal fade" id="paymentMethodModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0">
                <div class="modal-header">
                    <h5 class="modal-title fw-bold">Parçalı Ödeme</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-0">
                    <div class="row g-0">
                        <!-- Ürün Listesi Bölümü -->
                        <div class="col-md-6 p-4 border-end">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h6 class="m-0 text-uppercase text-muted fw-bold small">Ödenecek Ürünler</h6>
                            </div>

                            <div id="splitOrderList" class="list-group list-group-flush mb-4" style="max-height: 300px; overflow-y: auto;"></div>

                            <div class="bg-light p-3 rounded">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="fw-bold fs-5">TOPLAM</span>
                                    <span id="splitTotalAmount" class="fw-bold fs-5 text-primary">0.00 ₺</span>
                                </div>
                            </div>
                        </div>

                        <!-- Ödeme Yöntemleri Bölümü -->
                        <div class="col-md-12 p-4">
                            <div class="mb-4">
                                <h6 class="text-uppercase text-muted fw-bold small mb-3">ÖDEME YÖNTEMLERİ</h6>

                                <!-- Kart ile Ödeme -->
                                <div class="payment-method-card mb-4 p-3 rounded-3">
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="payment-icon bg-primary text-white rounded-circle me-3">
                                            <i class="fas fa-credit-card"></i>
                                        </div>
                                        <h6 class="m-0 fw-bold">Kart ile Ödeme</h6>
                                    </div>
                                    <div class="input-group mb-2">
                                        <input type="text" class="form-control" id="splitCardAmount" placeholder="0.00" style="height: 48px;">
                                    </div>
                                </div>

                                <!-- Nakit Ödeme -->
                                <div class="payment-method-card mb-4 p-3 rounded-3">
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="payment-icon bg-success text-white rounded-circle me-3">
                                            <i class="fas fa-money-bill-wave"></i>
                                        </div>
                                        <h6 class="m-0 fw-bold">Nakit Ödeme</h6>
                                    </div>
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="splitCashAmount" placeholder="0.00" style="height: 48px;">
                                    </div>
                                </div>
                            </div>

                            <!-- Butonlar -->
                            <div class="modal-footer bg-light">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                                <button id="addOrderBtn" class="btn btn-primary">
                                    <i class="fas fa-check-circle me-2"></i>Ödemeyi Tamamla
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Sipariş Ekle Modalı -->
@if (role == "Admin" || allowedPages.Contains("AddOrders"))
{
<div class="modal fade" id="orderModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Yeni Sipariş Ekle</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="row g-3">
                    <!-- Kategori Seçimleri -->
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Kategori</label>
                        <select id="menuCategorySelect" class="form-select">
                            <option value="" selected disabled>Kategori seçiniz</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Alt Kategori</label>
                        <select id="subMenuCategorySelect" class="form-select" disabled>
                            <option value="" selected disabled>Önce kategori seçiniz</option>
                        </select>
                    </div>
                </div>

                <!-- Ürün Listesi -->
                <div class="mt-4">
                    <h6 class="fw-bold mb-3 border-bottom pb-2">Ürünler</h6>
                    <div id="productCheckboxList" class="row g-3">
                        <div class="col-12 text-muted">
                            Lütfen önce alt kategori seçiniz
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button id="addOrderBtn" class="btn btn-primary">
                    <i class="fas fa-plus-circle me-2"></i>Siparişleri Ekle
                </button>
            </div>
        </div>
    </div>
</div>
}

<!-- İade Sebebi Modalı -->
@if (role == "Admin" || allowedPages.Contains("ReturnOrders"))
{
    <div class="modal fade" id="returnReasonModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">İade Sebebi</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div class="modal-body">
                    <textarea id="returnReasonText" class="form-control" rows="3" placeholder="İade sebebini yazınız..."></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" id="confirmReturnBtn" class="btn btn-danger">İadeyi Onayla</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        let selectedTableId;
        let selectedOrderIds = [];

        $(document).on('click', '.edit-table-btn', function () {
            selectedTableId = $(this).data('id');
            sessionStorage.setItem('lastOpenedTableId', selectedTableId);
            loadTableDetails(selectedTableId);
        });

        function loadTableDetails(tableId) {
            $.get('/Table/GetTableDetails', { tableId: tableId }, function (data) {
                $('#modalTableName').html(`<strong>${data.name}</strong> <span class="text-muted">(${data.sectionName || 'Bölüm yok'})</span>`);
                selectedOrderIds = [];

                let totalAmount = 0;
                let paidAmount = 0;
                let returnAmount = 0;
                let cancelAmount = 0;
                let bonusAmount = 0;

                const allFinalized = data.orders.every(o => [4, 6, 7, 8].includes(o.status));
                togglePaymentButtons(!allFinalized);

                let orders = data.orders.map(o => {
                    let orderStatusText = '';
                    let rowClass = '';
                    let price = o.price || 0;
                    let textClass = '';
                    let iconHtml = '';

                    // Her sipariş, toplam tutara eklenecek (durumu ne olursa olsun)
                    totalAmount += price;

                    switch (o.status) {
                        case 1:
                            orderStatusText = 'Sipariş Verildi';
                            break;
                        case 2:
                            orderStatusText = 'Hazırlanıyor';
                            break;
                        case 3:
                            orderStatusText = 'Teslim Edildi';
                            break;
                        case 4:
                            orderStatusText = 'Ödendi';
                            paidAmount += price;
                            rowClass = 'bg-light-paid';
                            textClass = 'text-success';
                            iconHtml = '<i class="bi bi-check-circle-fill text-success"></i>';
                            break;
                        case 6:
                            orderStatusText = 'İade Edildi';
                            returnAmount += price;
                            rowClass = 'bg-light-return';
                            textClass = 'text-danger';
                            iconHtml = '<i class="bi bi-arrow-counterclockwise text-danger"></i>';
                            break;
                        case 7:
                            orderStatusText = 'İptal Edildi';
                            cancelAmount += price;
                            rowClass = 'bg-light-cancel';
                            textClass = 'text-danger';
                            iconHtml = '<i class="bi bi-trash-fill text-danger"></i>';
                            break;
                        case 8:
                            orderStatusText = 'İkram Edildi';
                            bonusAmount += price;
                            rowClass = 'bg-light-bonus';
                            textClass = 'text-info';
                            iconHtml = '<i class="bi bi-gift-fill text-info"></i>';
                            break;
                    }

                    return `
                        <tr class="${rowClass}">
                            <td width="40">
                                ${![4,6,7,8].includes(o.status) ? `<input type="checkbox" class="form-check-input order-checkbox" data-id="${o.id}" data-price="${price}" />` : ''}
                            </td>
                            <td style="width: 45%;">${o.productName}</td>
                            <td style="width: 25%;" class="text-center ${textClass}">
                                ${iconHtml} ${orderStatusText}
                            </td>
                            <td style="width: 20%;" class="text-end">${price.toFixed(2)} TL</td>
                        </tr>`;
                }).join('');

                $('#orderList').html(orders);
                $('#totalAmount').text(totalAmount.toFixed(2));
                $('#paidAmount').text(paidAmount.toFixed(2));
                $('#returnedAmount').text(returnAmount.toFixed(2));
                $('#cancelledAmount').text(cancelAmount.toFixed(2));
                $('#bonusAmount').text(bonusAmount.toFixed(2));

                const remaining = totalAmount - paidAmount - returnAmount - cancelAmount - bonusAmount;
                $('#remainingAmount').text((remaining > 0 ? remaining : 0).toFixed(2));

                $('#cancelledRow').toggle(cancelAmount > 0);
                $('#returnedRow').toggle(returnAmount > 0);
                $('#bonusRow').toggle(bonusAmount > 0);

                $('#selectedAmount').text(0);
                togglePaymentButtons(totalAmount > 0);

                // Masaları bölümlere göre grupla
                const groupedTables = {};
                data.allTables.forEach(table => {
                    if (table.id !== tableId) {
                        const section = table.sectionName?.trim() ? table.sectionName.trim() : 'Diğer';
                        if (!groupedTables[section]) {
                            groupedTables[section] = [];
                        }
                        groupedTables[section].push(table);
                    }
                });

                // Gruplanmış masaları dropdown'a ekle
                $('#moveTableSelect').empty().append('<option value="">-- Hedef Masa Seçin --</option>');

                // Bölümleri alfabetik sırala
                const sortedSections = Object.keys(groupedTables).sort();

                sortedSections.forEach(section => {
                    // Bölüm başlığı ekle (optgroup)
                    const $optgroup = $('<optgroup>').attr('label', section);

                    // Masaları bölüm içinde alfabetik sırala
                    groupedTables[section].sort((a, b) => a.name.localeCompare(b.name)).forEach(table => {
                        $optgroup.append(`<option value="${table.id}">${table.name}</option>`);
                    });

                    $('#moveTableSelect').append($optgroup);
                });
            });
        }

        function togglePaymentButtons(enabled) {
            $('#payCardBtn, #payCashBtn').prop('disabled', !enabled);
        }

        $(document).on('change', '.order-checkbox', function () {
            selectedOrderIds = $('.order-checkbox:checked').map(function () {
                return $(this).data('id');
            }).get();

            let total = $('.order-checkbox:checked').toArray().reduce((sum, el) => sum + parseFloat($(el).data('price') || 0), 0);
            $('#selectedAmount').text(total.toFixed(2));
            $('#partialPayBtn').prop('disabled', selectedOrderIds.length === 0);
            $('#moveSelectedOrdersBtn').prop('disabled', selectedOrderIds.length === 0);
        });

        let selectedAmount = 0;

        $('#partialPayBtn').click(function () {
            if (selectedOrderIds.length === 0) return;
            selectedAmount = parseFloat($('#selectedAmount').text());
            $('#splitTotalAmount').text(selectedAmount.toFixed(2));
            $('#splitCardAmount').val('');
            $('#splitCashAmount').val('');

            let selectedItems = $('.order-checkbox:checked').map(function () {
                const row = $(this).closest('tr');
                const productName = row.find('td:nth-child(2)').text().trim();
                const price = parseFloat($(this).data('price')).toFixed(2);
                return `<div class="d-flex justify-content-between border-bottom py-2">
                    <span>${productName}</span>
                    <span>${price} ₺</span>
                </div>`;
            }).get().join('');

            $('#splitOrderList').html(selectedItems);
            $('#tableModal').modal('hide');
            $('#paymentMethodModal').modal('show');
        });

        $('#splitCardAmount').on('keyup', function () {
            let card = parseFloat($(this).val()) || 0;
            let cash = (selectedAmount - card).toFixed(2);
            $('#splitCashAmount').val(cash >= 0 ? cash : 0);
        });

        $('#splitCashAmount').on('keyup', function () {
            let cash = parseFloat($(this).val()) || 0;
            let card = (selectedAmount - cash).toFixed(2);
            $('#splitCardAmount').val(card >= 0 ? card : 0);
        });

        $('#confirmSplitPayment').click(function () {
            let cardInput = $('#splitCardAmount').val().trim();
            let cashInput = $('#splitCashAmount').val().trim();

            let card = parseFloat(cardInput.replace(',', '.')) || 0;
            let cash = parseFloat(cashInput.replace(',', '.')) || 0;

            let total = card + cash;

            if (Math.abs(total - selectedAmount) > 0.01) {
                alert(`Girilen tutarların toplamı ${selectedAmount.toFixed(2)} TL ile eşleşmiyor.`);
                return;
            }

            const payload = {
                orderIds: selectedOrderIds,
                cardAmount: card.toString().replace(',', '.'),
                cashAmount: cash.toString().replace(',', '.')
            };

            $.post('/Table/PaySelectedOrdersSplit', payload, function (response) {
                if (response.success) {
                    $('#paymentMethodModal').modal('hide');
                    loadTableDetails(selectedTableId);
                } else {
                    alert(response.message);
                }
            });
        });

        $('#paymentMethodModal').on('hidden.bs.modal', function () {
            $('#tableModal').modal('show');
        });

        $('#paySelectedCard, #paySelectedCash').click(function () {
            const method = parseInt($(this).data('method'));

            $.post('/Table/PaySelectedOrders', {
                orderIds: selectedOrderIds,
                method: method
            }, function () {
                $('#paymentMethodModal').modal('hide');
                loadTableDetails(selectedTableId);
            });
        });

        $('#moveTableBtn').click(function () {
            let toId = $('#moveTableSelect').val();
            $.post('/Table/MoveTable', { fromId: selectedTableId, toId }, function () {
                loadTableDetails(selectedTableId);
            });
        });

        $('#moveSelectedOrdersBtn').click(function () {
            const toId = $('#moveTableSelect').val();
            if (selectedOrderIds.length === 0 || !toId) return;

            $.post('/Table/MoveSelectedOrders', { toId: toId, orderIds: selectedOrderIds }, function () {
                loadTableDetails(selectedTableId);
            });
        });

        $('#payCardBtn').click(() => {
            $.post('/Table/CompletePayment', { tableId: selectedTableId, method: 1 }, function (response) {
                if(response.success) {
                    loadTableDetails(selectedTableId);
                }
                else {
                    alert(response.message);
                }
            });
        });

        $('#payCashBtn').click(() => {
            $.post('/Table/CompletePayment', { tableId: selectedTableId, method: 2 }, function (response) {
                if(response.success) {
                    loadTableDetails(selectedTableId);
                }
                else {
                    alert(response.message);
                }
            });
        });

        document.querySelectorAll('.close-table-btn').forEach(button => {
            button.addEventListener('click', function () {
                const tableId = this.getAttribute('data-id');
                if (!confirm("Bu masayı kapatmak istiyor musunuz?")) return;

                fetch('/Table/CloseTable', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: tableId })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(data.message);
                            location.reload();
                        } else {
                            alert(data.message || 'Masa kapatma başarısız oldu.');
                        }
                    })
                    .catch(() => alert('Sunucu hatası oluştu.'));
            });
        });

        $(document).on('change', '.order-checkbox', function () {
            const anyChecked = $('.order-checkbox:checked').length > 0;
            $('#cancelSelectedOrdersBtn').prop('disabled', !anyChecked);
            $('#returnSelectedOrdersBtn').prop('disabled', !anyChecked);
            $('#bonusSelectedOrdersBtn').prop('disabled', !anyChecked);
            $('#confirmOrderBtn').prop('disabled', !anyChecked);
            $('#deliverTheOrderBtn').prop('disabled', !anyChecked);
        });

        $('#confirmOrderBtn').click(function () {
            if (selectedOrderIds.length === 0) {
                alert("Lütfen onaylamak istediğiniz siparişleri seçin.");
                return;
            }

            if (!confirm("Seçilen siparişleri onaylamak istediğinize emin misiniz?")) return;

            $.post('/Table/ConfirmOrders', {
                orderIds: selectedOrderIds
            }, function (res) {
                if (res.success) {
                    alert("Seçilen siparişler onaylandı.");
                    loadTableDetails(selectedTableId);
                } else {
                    alert("Onaylama işlemi başarısız oldu.");
                }
            });
        });

        $('#deliverTheOrderBtn').click(function () {
            if (selectedOrderIds.length === 0) {
                alert("Lütfen teslim etmek istediğiniz siparişleri seçin.");
                return;
            }

            if (!confirm("Seçilen siparişleri teslim etmek istediğinize emin misiniz?")) return;

            $.post('/Table/DeliverTheOrders', {
                orderIds: selectedOrderIds
            }, function (res) {
                if (res.success) {
                    alert("Seçilen siparişler teslim edildi.");
                    loadTableDetails(selectedTableId);
                } else {
                    alert("Teslim etme işlemi başarısız oldu.");
                }
            });
        });

        $('#cancelSelectedOrdersBtn').click(function () {
            if (selectedOrderIds.length === 0) {
                alert("Lütfen iptal etmek istediğiniz siparişleri seçin.");
                return;
            }

            if (!confirm("Seçilen siparişleri iptal etmek istediğinize emin misiniz?")) return;

            $.post('/Table/CancelOrders', {
                orderIds: selectedOrderIds
            }, function (res) {
                if (res.success) {
                    alert("Seçilen siparişler iptal edildi.");
                    loadTableDetails(selectedTableId);
                } else {
                    alert("İptal işlemi başarısız oldu.");
                }
            });
        });

        $('#returnSelectedOrdersBtn').click(function () {
            if (selectedOrderIds.length === 0) {
                alert("Lütfen iade etmek istediğiniz siparişleri seçin.");
                return;
            }

            // Diğer modallarla uyumlu: önce tableModal'ı kapat
            $('#tableModal').modal('hide');

            // Iade sebebi modalını aç
            $('#returnReasonText').val('');
            const modal = new bootstrap.Modal(document.getElementById('returnReasonModal'));
            modal.show();
        });

        $('#returnReasonModal').on('hidden.bs.modal', function () {
            $('#tableModal').modal('show');
        });

        $('#confirmReturnBtn').click(function () {
            const reason = $('#returnReasonText').val().trim();

            if (!reason) {
                alert("Lütfen iade sebebini giriniz.");
                return;
            }

            $.post('/Table/ReturnOrders', {
                tableId: selectedTableId,
                method: 3,
                comment: reason,
                orderIds: selectedOrderIds
            }, function (res) {
                if (res.success) {
                    alert("Seçilen siparişler iade edildi.");
                    loadTableDetails(selectedTableId);
                    bootstrap.Modal.getInstance(document.getElementById('returnReasonModal')).hide();
                } else {
                    alert("İade işlemi başarısız oldu.");
                }
            }).fail(function () {
                alert("Sunucu hatası oluştu.");
            });
        });

        $('#bonusSelectedOrdersBtn').click(function () {
            if (selectedOrderIds.length === 0) {
                alert("Lütfen ikram etmek istediğiniz siparişleri seçin.");
                return;
            }

            if (!confirm("Seçilen siparişleri ikram etmek istediğinize emin misiniz?")) return;

            $.post('/Table/BonusOrders', {
                tableId: selectedTableId,
                method: 4,
                orderIds: selectedOrderIds
            }, function (res) {
                if (res.success) {
                    alert("Seçilen siparişler ikram edildi.");
                    loadTableDetails(selectedTableId);
                } else {
                    alert("İkram işlemi başarısız oldu.");
                }
            }).fail(function () {
                alert("Sunucu hatası oluştu.");
            });
        });

            $('#orderModal').on('hidden.bs.modal', function () {
            $('#tableModal').modal('show');
        });

        $('.addimg').click(function () {
            $.get('/Table/GetDayStatus', function (res) {
                if (!res.isDayOpen) {
                    Swal.fire({
                        icon: 'error',
                        title: 'İşlem Başarısız',
                        text: 'Gün başlatılmadı veya gün sonu alındı. Sipariş eklenemez.',
                        confirmButtonColor: '#3085d6'
                    });
                    return;
                }

                // Reset form
                $('#menuCategorySelect').val('');
                $('#subMenuCategorySelect').empty().prop('disabled', true)
                    .html('<option value="" selected disabled>Önce kategori seçiniz</option>');
                $('#productCheckboxList').html('<div class="col-12 text-muted">Lütfen önce alt kategori seçiniz</div>');

                // Kategorileri yükle
                $.get('/Table/GetMenuCategories', function (data) {
                    $('#menuCategorySelect').html('<option value="" selected disabled>Kategori seçiniz</option>');
                    data.forEach(item => {
                        $('#menuCategorySelect').append(`<option value="${item.id}">${item.categoryName}</option>`);
                    });
                });

                // Modal geçişi
                $('#tableModal').modal('hide');
                $('#orderModal').modal('show');
            });
        });

        // Kategori değiştiğinde
        $('#menuCategorySelect').change(function () {
            const categoryId = $(this).val();
            if (!categoryId) {
                $('#subMenuCategorySelect').empty().prop('disabled', true)
                    .html('<option value="" selected disabled>Önce kategori seçiniz</option>');
                $('#productCheckboxList').html('<div class="col-12 text-muted">Lütfen önce alt kategori seçiniz</div>');
                return;
            }

            $.get(`/Table/GetSubMenuCategories?categoryId=${categoryId}`, function (data) {
                $('#subMenuCategorySelect').empty().prop('disabled', false)
                    .html('<option value="" selected disabled>Alt kategori seçiniz</option>');

                if (data.length === 0) {
                    $('#subMenuCategorySelect').append('<option value="" selected disabled>Bu kategoride alt kategori yok</option>');
                } else {
                    data.forEach(item => {
                        $('#subMenuCategorySelect').append(`<option value="${item.id}">${item.subCategoryName}</option>`);
                    });
                }
            });
        });

        // Alt kategori değiştiğinde
        $('#subMenuCategorySelect').change(function () {
            const subCategoryId = $(this).val();
            if (!subCategoryId) {
                $('#productCheckboxList').html('<div class="col-12 text-muted">Lütfen bir alt kategori seçiniz</div>');
                return;
            }

            $.get(`/Table/GetProducts?subCategoryId=${subCategoryId}`, function (data) {
                if (data.length === 0) {
                    $('#productCheckboxList').html('<div class="col-12 text-muted">Bu kategoride ürün bulunamadı</div>');
                    return;
                }

                let html = '';
                data.forEach(item => {
                    html += `
                        <div class="col-md-6 col-lg-4">
                            <div class="product-card" data-product-id="${item.id}">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-0 fw-bold">${item.name}</h6>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input product-checkbox" type="checkbox"
                                            value="${item.id}" id="prod${item.id}">
                                    </div>
                                </div>
                                <div class="d-flex align-items-center gap-3">
                                    <div class="product-image-placeholder">
                                        <i class="fas fa-utensils"></i>
                                    </div>
                                    <div>
                                        <div class="product-price mb-2">${item.price.toFixed(2)} TL</div>
                                        <div class="quantity-control">
                                            <button class="btn btn-sm btn-outline-secondary quantity-decrease"
                                                data-product-id="${item.id}">
                                                <i class="fas fa-minus"></i>
                                            </button>
                                            <input type="number" min="1" max="${item.stockCount ?? 99}"
                                                value="1" class="form-control form-control-sm product-quantity"
                                                data-product-id="${item.id}">
                                            <button class="btn btn-sm btn-outline-secondary quantity-increase"
                                                data-product-id="${item.id}">
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                });
                $('#productCheckboxList').html(html);
            });
        });

        // Miktar artırma/azaltma butonları
        $(document).on('click', '.quantity-decrease', function() {
            const productId = $(this).data('product-id');
            const input = $(`.product-quantity[data-product-id="${productId}"]`);
            let val = parseInt(input.val()) || 1;
            if (val > 1) {
                input.val(val - 1);
            }
        });

        $(document).on('click', '.quantity-increase', function() {
            const productId = $(this).data('product-id');
            const input = $(`.product-quantity[data-product-id="${productId}"]`);
            const max = parseInt(input.attr('max')) || 99;
            let val = parseInt(input.val()) || 1;
            if (val < max) {
                input.val(val + 1);
            }
        });

        // Checkbox durumuna göre kart stilini değiştir
        $(document).on('change', '.product-checkbox', function() {
            const card = $(this).closest('.product-card');
            if ($(this).is(':checked')) {
                card.addClass('selected');
            } else {
                card.removeClass('selected');
            }
        });

        $('#addOrderBtn').click(function () {
            const selectedProducts = [];

            $('.product-checkbox:checked').each(function () {
                const productId = $(this).val();
                const quantityInput = $(`.product-quantity[data-product-id="${productId}"]`);
                const quantity = parseInt(quantityInput.val()) || 1;

                for (let i = 0; i < quantity; i++) {
                    selectedProducts.push(productId);
                }
            });

            if (selectedProducts.length === 0) {
                alert("Lütfen en az bir ürün seçin.");
                return;
            }

            $.post('/Table/AddOrders', {
                productIds: selectedProducts,
                tableId: selectedTableId
            }, function (res) {
                if (res.success) {
                    alert("Siparişler eklendi.");
                    $('#orderModal').modal('hide');
                    loadTableDetails(selectedTableId);
                }
            });
        });

        document.querySelectorAll('.notification-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const tableId = this.getAttribute('data-id');
                const isChecked = this.checked;
                const confirmationMessage = isChecked
                    ? "Masanın bildirimlerini açmak istediğinize emin misiniz?"
                    : "Masanın bildirimlerini kapatmak istediğinize emin misiniz?";

                if (!confirm(confirmationMessage)) {
                    this.checked = !isChecked;
                    return;
                }

                fetch('/Table/UpdateNotification', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: tableId, notification: isChecked })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (!data.success) {
                            alert('Bildirim durumu güncellenemedi.');
                            checkbox.checked = !isChecked;
                        }
                    })
                    .catch(() => {
                        alert('Bir hata oluştu.');
                        checkbox.checked = !isChecked;
                    });
            });
        });

        $(document).ready(function() {
            // Tümünü seç
            $('#selectAllOrders').change(function() {
                $('.order-checkbox').prop('checked', $(this).prop('checked'));
                updateSelectedItems();
            });

            // Sipariş seçimlerini takip et
            $('body').on('change', '.order-checkbox', function() {
                updateSelectedItems();
            });

            function updateSelectedItems() {
                var selectedCount = $('.order-checkbox:checked').length;
                var selectedAmount = 0;

                $('.order-checkbox:checked').each(function() {
                    selectedAmount += parseFloat($(this).data('price'));
                });

                if (selectedCount > 0) {
                    $('#selectedItemsCard').show();
                    $('#selectedAmount').text(selectedAmount.toFixed(2) + ' TL');
                    $('[id$="Btn"]:not(#selectAllOrders)').prop('disabled', false);
                } else {
                    $('#selectedItemsCard').hide();
                    $('[id$="Btn"]:not(#selectAllOrders)').prop('disabled', true);
                }
            }
        });
    </script>
}
